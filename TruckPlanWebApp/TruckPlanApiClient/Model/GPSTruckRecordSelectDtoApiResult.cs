/* 
 * API V2
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = TruckPlanApiClient.Client.SwaggerDateConverter;

namespace TruckPlanApiClient.Model
{
    /// <summary>
    /// GPSTruckRecordSelectDtoApiResult
    /// </summary>
    [DataContract]
        public partial class GPSTruckRecordSelectDtoApiResult :  IEquatable<GPSTruckRecordSelectDtoApiResult>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GPSTruckRecordSelectDtoApiResult" /> class.
        /// </summary>
        /// <param name="data">data.</param>
        /// <param name="isSuccess">isSuccess.</param>
        /// <param name="statusCode">statusCode.</param>
        /// <param name="message">message.</param>
        public GPSTruckRecordSelectDtoApiResult(GPSTruckRecordSelectDto data = default(GPSTruckRecordSelectDto), bool? isSuccess = default(bool?), ApiResultStatusCode statusCode = default(ApiResultStatusCode), string message = default(string))
        {
            this.Data = data;
            this.IsSuccess = isSuccess;
            this.StatusCode = statusCode;
            this.Message = message;
        }
        
        /// <summary>
        /// Gets or Sets Data
        /// </summary>
        [DataMember(Name="data", EmitDefaultValue=false)]
        public GPSTruckRecordSelectDto Data { get; set; }

        /// <summary>
        /// Gets or Sets IsSuccess
        /// </summary>
        [DataMember(Name="isSuccess", EmitDefaultValue=false)]
        public bool? IsSuccess { get; set; }

        /// <summary>
        /// Gets or Sets StatusCode
        /// </summary>
        [DataMember(Name="statusCode", EmitDefaultValue=false)]
        public ApiResultStatusCode StatusCode { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GPSTruckRecordSelectDtoApiResult {\n");
            sb.Append("  Data: ").Append(Data).Append("\n");
            sb.Append("  IsSuccess: ").Append(IsSuccess).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GPSTruckRecordSelectDtoApiResult);
        }

        /// <summary>
        /// Returns true if GPSTruckRecordSelectDtoApiResult instances are equal
        /// </summary>
        /// <param name="input">Instance of GPSTruckRecordSelectDtoApiResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GPSTruckRecordSelectDtoApiResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Data == input.Data ||
                    (this.Data != null &&
                    this.Data.Equals(input.Data))
                ) && 
                (
                    this.IsSuccess == input.IsSuccess ||
                    (this.IsSuccess != null &&
                    this.IsSuccess.Equals(input.IsSuccess))
                ) && 
                (
                    this.StatusCode == input.StatusCode ||
                    (this.StatusCode != null &&
                    this.StatusCode.Equals(input.StatusCode))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Data != null)
                    hashCode = hashCode * 59 + this.Data.GetHashCode();
                if (this.IsSuccess != null)
                    hashCode = hashCode * 59 + this.IsSuccess.GetHashCode();
                if (this.StatusCode != null)
                    hashCode = hashCode * 59 + this.StatusCode.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
